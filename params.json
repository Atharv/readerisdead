{"name":"Reader is Dead","tagline":"A collection of tools to help with the impending Google Reader shutdown","body":"## Installation and requirements\r\n\r\nAll tools are written in Python and have been tested with Python 2.7 on Mac OS X 10.8. To install them, download either the [`.zip`](https://github.com/mihaip/readerisdead/zipball/master) or [`.tar`](https://github.com/mihaip/readerisdead/tarball/master) archive. Expand the archive, and then open the resulting directory in your terminal. Command lines to invoke specific tools are listed below.\r\n\r\nOn Windows, you'll probably need to [download Python](http://www.python.org/download/) first. Then right-click the folder that you got when you expanded the `.zip`, and choose \"Open command window here\". Once you have a command-line, you can run the same scripts that are mentioned below, but add a `.bat` extension to the script name (e.g. `bin\\reader_archive.bat` instead of `bin/reader_archive`).\r\n\r\n## reader_archive\r\n\r\n_Comprehensive archive of a Google Reader account._\r\n\r\nUnlike Google Reader's [Takeout support](http://googlesystem.blogspot.com/2012/11/export-google-reader-data-in-google.html), provides a complete archive of a Reader account's data. This includes:\r\n\r\n* All your read items\r\n* All your starred items\r\n* All your tagged items\r\n* All your shared items\r\n* All the shared items from the people you were following.\r\n* All the comments on shared items\r\n* All your liked items\r\n* All items you've kept unread, emailed, read on your phone, clicked on or otherwise [interacted](http://googlesystem.blogspot.com/2008/03/explore-your-interactions-with-google.html) with.\r\n* All items that have appeared in one of your subscriptions\r\n* All items that were recommended to you\r\n* All items in the (English) \"Explore\" section\r\n* All the profiles of the people you were following before the [sharepocalypse](http://googlereader.blogspot.com/2011/10/new-in-reader-fresh-design-and-google.html).\r\n* All your preferences.\r\n\r\nTo use it:\r\n\r\n```\r\nbin/reader_archive --output_directory=~/Downloads/reader_archive\r\n```\r\n\r\nA browser window will appear asking you to authorize the app. Once you do, you'll be given a code to paste back into the terminal (you can also use the `--use_client_login` flag to instead be prompted for your Google Account username and password). See\r\n[this wiki page](https://github.com/mihaip/readerisdead/wiki/reader_archive-Format) for an explanation of the archive format. The intent is to be comprehensive, such that other tools that use the archive data may be created.\r\n\r\nThe archiving process can take a while, depending on the size of your account\r\nand your internet connection. For an account with 300,000 read items, the\r\nprocess took about 10 minutes and generated 1 GB of data.\r\n\r\n## reader_browser\r\n***Still under development***\r\n\r\n_Browse an archived Google Reader account._\r\n\r\nTakes an archive generated by `reader_archive` and provides a browsing UI for it.\r\n\r\nTo use it:\r\n\r\n```\r\nbin/reader_browser ~/Downloads/reader_archive\r\n```\r\n\r\nThen load http://localhost:8071/ in your web browser (the script will attempt to do automatically) to see the contents of the archive.\r\n\r\n## item_lookup\r\n\r\n_Look up an item in an archived Google Reader account._\r\n\r\nTakes an archive generated by `reader_arhive` and provides a command-line UI for examining items within it.\r\n\r\nTo use it:\r\n\r\n```\r\nbin/item_lookup --archive_directory=~/Downloads/reader_archive 0306277b9d275db1\r\n```\r\n\r\nThe tool will then list all of the streams that the item appears in, the item body, and any comments made on that item. You can provide multiple item IDs (as additional command line arguments).\r\n\r\n## feed_archive\r\n\r\n_Saves public feed data from Google Reader's feed archive._\r\n\r\nGoogle Reader has (for the most part) a copy of all blog posts and other feed items published since its launch in late 2005 (assuming that at least one Reader user subscribed to the feed). This makes it an invaluable resource for sites [that](http://whytheluckystiff.net/) [disappear](http://www.diveintomark.org/), can serve as a [backup mechanism](http://wordpress.org/support/topic/whole-tables-gone-missing-from-db-hacked#post-1326219) and enables [tools](http://www.streamspigot.com/feed-playback/) to be created.\r\n\r\nPresumably access to this data is also going away come July 2013, and thus this tool can be used to get one last shot at archiving feeds you might want to refer to later.\r\n\r\nThe easiest way to use it is get the [OPML file](http://www.google.com/reader/subscriptions/export) with all your Reader subscriptions, and run it like so:\r\n\r\n```\r\nbin/feed_archive \\\r\n    --opml_file=~/Downloads/feeds.opml \\\r\n    --output_directory=~/Downloads/feed_archive\r\n```\r\n\r\nThe destination specified by `--output_directory` will be populated with one file per feed, named after its URL. The file contains all items that Reader ever saw in that feed, in the [Atom](http://www.ietf.org/rfc/rfc4287) format. Google Reader normally omits unknown (namespaced) elements in its API output, but in the script makes an attempt to use [high-fidelity mode](https://groups.google.com/forum/?fromgroups#!topic/fougrapi/Rab23a9jhzc) to reconstruct the original data as much as possible.\r\n\r\nIf you have specific feeds you'd like to save the archive for, instead of `--opml_file` you can also pass in feed URLs as command line arguments:\r\n\r\n```\r\nbin/feed_archive \\\r\n    --output_directory=~/Downloads/feed_archive \\\r\n    http://googlereader.blogspot.com/atom.xml \\\r\n    http://persistent.info/atom.xml \\\r\n    ...\r\n```\r\n\r\nThe tool supports additional arguments for controlling how many items are fetched, see `bin/feed_archive --help` for more information.","google":"UA-42093314-1","note":"Don't delete this file! It's used internally to help with page regeneration."}